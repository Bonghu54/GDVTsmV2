// <auto-generated />
using System;
using GDVTsmV3.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GDVTsmV3.Migrations
{
    [DbContext(typeof(GDVTsmV3Context))]
    [Migration("20231104085006_Migration01")]
    partial class Migration01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GDVTsmV3.Models.Cliente", b =>
                {
                    b.Property<int>("Id_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Cliente"));

                    b.Property<int>("Empleado_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora_de_registro")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Persona")
                        .HasColumnType("int");

                    b.Property<string>("Tipo_Cliente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Cliente");

                    b.HasIndex("Empleado_Id");

                    b.HasIndex("Id_Persona");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Detalle_Producto", b =>
                {
                    b.Property<int>("Id_Detalle_Producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Detalle_Producto"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Durabilidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estampado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Producto")
                        .HasColumnType("int");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo_De_Uso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Detalle_Producto");

                    b.HasIndex("Id_Producto");

                    b.ToTable("Detalle_Producto");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Detalle_de_venta", b =>
                {
                    b.Property<int>("Id_Detalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Detalle"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Id_Producto")
                        .HasColumnType("int");

                    b.Property<int>("Id_Venta")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio_Producto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id_Detalle");

                    b.HasIndex("Id_Producto");

                    b.HasIndex("Id_Venta");

                    b.ToTable("Detalle_de_venta");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Empleado", b =>
                {
                    b.Property<int>("Empleado_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Empleado_Id"));

                    b.Property<int?>("Persona_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Usuario_Id")
                        .HasColumnType("int");

                    b.HasKey("Empleado_Id");

                    b.HasIndex("Persona_Id")
                        .IsUnique()
                        .HasFilter("[Persona_Id] IS NOT NULL");

                    b.HasIndex("Usuario_Id")
                        .IsUnique()
                        .HasFilter("[Usuario_Id] IS NOT NULL");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Persona", b =>
                {
                    b.Property<int>("Persona_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Persona_Id"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ci")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_Nac")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Persona_Id");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Producto", b =>
                {
                    b.Property<int>("Id_Producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Producto"));

                    b.Property<int>("Cantidad_En_Stock")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_Producto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio_Unitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tipo_Producto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unidad_De_Venta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Producto");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Rol", b =>
                {
                    b.Property<int>("Rol_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rol_Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_Rol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Rol_Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Usuario", b =>
                {
                    b.Property<int>("Usuario_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Usuario_Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo_Electronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rol_Id")
                        .HasColumnType("int");

                    b.HasKey("Usuario_Id");

                    b.HasIndex("Rol_Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Venta", b =>
                {
                    b.Property<int>("Id_Venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Venta"));

                    b.Property<int>("Empleado_Id")
                        .HasColumnType("int");

                    b.Property<string>("Estado_Seguimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHora_Entrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHora_Venta")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<decimal>("Total_Venta")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id_Venta");

                    b.HasIndex("Empleado_Id");

                    b.HasIndex("Id_Cliente");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Cliente", b =>
                {
                    b.HasOne("GDVTsmV3.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("Empleado_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GDVTsmV3.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("Id_Persona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Detalle_Producto", b =>
                {
                    b.HasOne("GDVTsmV3.Models.Producto", "Producto")
                        .WithMany("Detalles_Producto")
                        .HasForeignKey("Id_Producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Detalle_de_venta", b =>
                {
                    b.HasOne("GDVTsmV3.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Id_Producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GDVTsmV3.Models.Venta", "Venta")
                        .WithMany("Detalles_de_venta")
                        .HasForeignKey("Id_Venta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Empleado", b =>
                {
                    b.HasOne("GDVTsmV3.Models.Persona", "Persona")
                        .WithOne("Empleado")
                        .HasForeignKey("GDVTsmV3.Models.Empleado", "Persona_Id");

                    b.HasOne("GDVTsmV3.Models.Usuario", "Usuario")
                        .WithOne("Empleado")
                        .HasForeignKey("GDVTsmV3.Models.Empleado", "Usuario_Id");

                    b.Navigation("Persona");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Usuario", b =>
                {
                    b.HasOne("GDVTsmV3.Models.Rol", "Rol")
                        .WithMany("Usuario")
                        .HasForeignKey("Rol_Id");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Venta", b =>
                {
                    b.HasOne("GDVTsmV3.Models.Empleado", "Empleado")
                        .WithMany("Ventas")
                        .HasForeignKey("Empleado_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GDVTsmV3.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("Id_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Empleado", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Persona", b =>
                {
                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Producto", b =>
                {
                    b.Navigation("Detalles_Producto");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Rol", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Usuario", b =>
                {
                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("GDVTsmV3.Models.Venta", b =>
                {
                    b.Navigation("Detalles_de_venta");
                });
#pragma warning restore 612, 618
        }
    }
}
